@startuml

skinparam classAttributeIconSize 0

      class Administrador {
      }
  
      class Aplicacion {
          {static} + PATH: String
          {static} + NOW: LocalDate
          {static} + minApoyos: int
          + addBloqueado(ciudadano: Ciudadano): boolean
          + addElemCol(elemCol: ElementoColectivo): boolean
          + addProyecto(proyecto: Proyecto): boolean
          + cargar(path: String): Aplicacion
          + findCiudadano(username: String): Ciudadano
          + findColectivo(nombre: String): Colectivo
          + findProyecto(id: int): Proyecto
          + getTree(): JTree
          + guardar(path: String)
          + notificarNuevoProyecto(p: Proyecto)
          + notificarRegistro(c: Ciudadano)
          + removeBloqueado(ciudadano: Ciudadano): boolean
          + removeElemCol(elemCol: ElementoColectivo): boolean
          + removeProyecto(p: Proyecto): boolean
          {static} + reset()
          {static} - getTreeRec() :DefaultMutableTreeNode
      }
  

    class Ciudadano {
      {static} + NIF_LEN: int
      - admitido : boolean
      - bloqueado : boolean
      - motivoRechazo: String
      - nif : String
      + addColectivo(colectivo: Colectivo): boolean
      + addColectivoRepresentado(colectivo: Colectivo): boolean
      + addProyecto(proyecto: Proyecto): boolean
      + addProyectoApoyado(proyecto: Proyecto): boolean
      + admitir()
      + bloquear()
      + desbloquear()
      + getTree(): JTree
      + removeColectivo(colectivo: Colectivo): boolean
      + removeColectivoRepresentado(colectivo: Colectivo): boolean
      + removeProyecto(proyecto: Proyecto): boolean
      + removeProyectoApoyado(proyecto: Proyecto): boolean
      {static} - getTreeRec(): DefaultMutableTreeNode
    }

      class Colectivo {
          - nombre : String
          + addElemento(ciudadano: Ciudadano): boolean
          + addElemento(colectivo: Colectivo): boolean
          + addProyecto(proyecto: Proyecto): boolean
          + addProyectoApoyado(proyecto: Proyecto): boolean
          + generarInformeAfinidad(c2: Colectivo): double
          + removeElemento(elemento: ElementoColectivo): boolean
          + removeProyecto(proyecto: Proyecto): boolean
          + removeProyectoApoyado(proyecto: Proyecto): boolean
          + perteneceHijos(ciudadano: Ciudadano): boolean
      }

      enum Distrito {
        Arganzuela
        Barajas
        Carabanchel
        Centro
        Chamartin
        Chamberi
        CiudadLineal
        FuencarralElPardo
        Hortaleza
        Latina
        MoncloaAravaca
        Moratalaz
        PuenteDeVallecas
        Retiro
        Salamanca
        SanBlasCanillejas
        Tetuan
        Usera
        Vicalvaro
        VillaDeVallecas
        Villaverde
      }
  

      interface ElementoColectivo {
          {abstract} + addProyecto(proyecto: Proyecto): boolean
          {abstract} + addProyectoApoyado(proyecto: Proyecto): boolean
          {abstract} + removeProyecto(proyecto: Proyecto): boolean
          {abstract} + removeProyectoApoyado(proyecto: Proyecto): boolean
      }

      enum EstadoProyecto {
        ACEPTADO
        DENEGADO
        ENVIADO
        FINANCIADO
        INICIAL
        LISTOENVAR
        RECHAZADO
      }

      abstract class Notificacion {
          {abstract} + descripcion(): String
      }

      class NotificacionProy {
          + descripcion(): String
      }

      class NotificacionReg {
          + descripcion(): String
      }

      class Persistencia {
          - aplicacionMinApoyos : int
          - proyectoNextId : int
          - now : LocalDate
          + setValues()
      }

      abstract class Proyecto {
          {static} - nextId : int
          {static} + MAXTIT: int
          {static} + MAXDESC: int
          {static} + MINIMPORTE: double
          {static} + CAD: int
          - caducado : boolean
          - descripcion : String
          - fechaCreacion : LocalDate
          - id : int
          - idEnvio : String
          - importeConcedido : double
          - importeSolicitado : double
          - motivoRechazo: String
          - nApoyos : int
          - titulo : String
          - ultimoApoyo : LocalDate
          + aceptar()
          + bloquearApoyo(c: Ciudadano): boolean
          + caducar()
          + consultarFinanciacion()
          + denegarFinanciacion()
          + enviarFinanciacion()
          + generarInformePopularidad(): int
          + notificarCambio()
          + rechazar()
          + recibirApoyo(ec: ElementoColectivo)
          + recibirApoyo(ec: ElementoColectivo, directo: boolean)
          {abstract} +getProjectKind(): ProjectKind
          {abstract} +getExtraData(): String
          {abstract} # crearSolicitud(): GrantRequest
          - recibirApoyo(c: Ciudadano)
          - recibirApoyo(c: Colectivo)
      }

      class ProyectoInfraestructura {
          - afectados : List<Distrito>
          - imagen : String
          + addAfectados(d: Distrito): boolean
          + removeAfectados(d: Distrito): boolean
          + getProjectKind(): ProjectKind
          + getExtraData(): String
          # crearSolicitud(): GrantRequest

      }

      class ProyectoSocial {
          - grupoSocial : String
          - nacional : boolean
          + getProjectKind(): ProjectKind
          + getExtraData(): String
          # crearSolicitud(): GrantRequest
      }

      abstract class SolicitudFinanciacion {
          + getProjectDescription(): String
          + getProjectTitle(): String
          + getRequestedAmount(): double
          + getProjectKind(): ProjectKind
          + getExtraData(): String
      }

      abstract class Usuario {
          - password : String
          - username : String
      }
  

  Administrador -up-|> Usuario
  Aplicacion *-- Administrador : admin
  Aplicacion *-- Usuario : usuarioAcutal
  Aplicacion *-- Persistencia : varStatic
  Ciudadano .right.|> ElementoColectivo
  Ciudadano -up-|> Usuario
  Colectivo .right.|> ElementoColectivo
  Colectivo o-- Colectivo : padre
  Colectivo o-- Ciudadano : representante
  NotificacionProy -up-|> Notificacion
  NotificacionProy o-- Proyecto : sujeto
  NotificacionReg -up-|> Notificacion
  NotificacionReg o-- Ciudadano : sujeto
  Proyecto -left- EstadoProyecto : estado
  Proyecto o-up- ElementoColectivo : propulsor
  ProyectoInfraestructura -up-|> Proyecto
  ProyectoSocial -up-|> Proyecto
  SolicitudFinanciacion .up.|> GrantRequest
  SolicitudFinanciacion o-- Proyecto : proyecto
  SolicitudInfraestructura -up-|> SolicitudFinanciacion
  SolicitudSocial -up-|> SolicitudFinanciacion
  Usuario *-- Notificacion: pendientes
  Colectivo o-- ElementoColectivo: elementos
  Colectivo o-left- Proyecto: proyectos
  Colectivo o-left- Proyecto: proyectosApoyados
  Ciudadano o-left- Proyecto: proyectos
  Ciudadano o-left- Proyecto: proyectosApoyados
  Ciudadano o-down- Colectivo: colectivos
  Ciudadano o-down- Colectivo: colectivosRepresentados
  Aplicacion o-- ElementoColectivo: elemCol
  Aplicacion o-- Ciudadano: bloqueados
  Aplicacion o-- Proyecto: proyectos
  Aplicacion *-- Aplicacion: VecindApp


@enduml
